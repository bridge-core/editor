{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "array",
	"items": {
		"type": "object",
		"anyOf": [
			{
				"properties": {
					"function": {
						"$ref": "./general.json#/definitions/functions"
					}
				},
				"required": ["function"]
			},
			{
				"properties": {
					"condition": {
						"$ref": "./conditions.json"
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "enchant_book_for_trading"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"base_cost": {
							"type": "number"
						},
						"base_random_cost": {
							"type": "number"
						},
						"per_level_cost": {
							"type": "number"
						},
						"per_level_random_cost": {
							"type": "number"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "enchant_random_gear"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"chance": {
							"type": "number"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "enchant_randomly"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"treasure": {
							"type": "boolean"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "enchant_with_levels"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"treasure": {
							"type": "boolean"
						},
						"levels": {
							"properties": {
								"min": {
									"type": "number"
								},
								"max": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "exploration_map"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"destination": {
							"$ref": "../general/vanilla/structures.json"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "fill_container"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"loot_table": {
							"type": "string"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "random_aux_val"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"values": {
							"properties": {
								"min": {
									"type": "number"
								},
								"max": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "random_block_state"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"block_state": {
							"examples": ["color"]
						},
						"values": {
							"properties": {
								"min": {
									"type": "number"
								},
								"max": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "looting_enchant"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"count": {
							"properties": {
								"min": {
									"type": "number"
								},
								"max": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_actor_id"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"id": {
							"$ref": "../general/reference/identifiers.json#/definitions/entity_identifiers"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_banner_details"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"type": {
							"enum": ["default", "illager_captain"]
						},
						"base_color": {
							"$ref": "../general/colorPalette.json"
						},
						"patterns": {
							"type": "array",
							"items": {
								"properties": {
									"pattern": {
										"$ref": "./general.json#/definitions/banner_patterns"
									},
									"color": {
										"$ref": "../general/colorPalette.json"
									}
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_book_contents"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"author": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"pages": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_count"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"count": {
							"properties": {
								"min": {
									"type": "number"
								},
								"max": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_damage"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"damage": {
							"properties": {
								"min": {
									"type": "number"
								},
								"max": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_data"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"data": {
							"properties": {
								"min": {
									"type": "number"
								},
								"max": {
									"type": "number"
								}
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_lore"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"lore": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "set_name"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"name": {
							"type": "string"
						}
					}
				}
			},
			{
				"if": {
					"properties": {
						"function": {
							"const": "specific_enchants"
						}
					},
					"required": ["function"]
				},
				"then": {
					"properties": {
						"enchants": {
							"type": "array",
							"items": {
								"properties": {
									"id": {
										"$ref": "../general/vanilla/enchantName.json"
									},
									"level": {
										"type": "array",
										"minItems": 2,
										"maxItems": 2,
										"items": {
											"type": "number"
										}
									}
								}
							}
						}
					}
				}
			}
		]
	}
}
