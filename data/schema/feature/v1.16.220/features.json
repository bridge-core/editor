{
	"$schema": "http://json-schema.org/draft-07/schema",
	"allOf": [
		{
			"$ref": "../v1.16.0/features.json"
		},
		{
			"properties": {
				"minecraft:cave_carver_feature": {
					"description": "Carves a cave through the world in the current chunk, and in every chunk around the current chunk in an 8 radial pattern. This feature will also only work when placed specifically in the pass 'pregeneration_pass'.",
					"additionalProperties": false,
					"properties": {
						"description": {
							"additionalProperties": false,
							"properties": {
								"identifier": {
									"$ref": "../../project/prefixedFileIdentifierEnum.json"
								}
							}
						},
						"fill_with": {
							"description": "Reference to the block to fill the cave with.",
							"$ref": "../general.json#/definitions/block_reference"
						},
						"width_modifier": {
							"description": "How many blocks to increase the cave radius by, from the center point of the cave.",
							"type": "number"
						}
					}
				},
				"minecraft:hell_cave_carver_feature": {
					"description": "Carves a cave through the Nether in the current chunk, and in every chunk around the current chunk in an 8 radial pattern. This feature will also only work when placed specifically in the pass 'pregeneration_pass'.",
					"additionalProperties": false,
					"properties": {
						"description": {
							"additionalProperties": false,
							"properties": {
								"identifier": {
									"$ref": "../../project/prefixedFileIdentifierEnum.json"
								}
							}
						},
						"fill_with": {
							"description": "Reference to the block to fill the cave with.",
							"$ref": "../general.json#/definitions/block_reference"
						},
						"width_modifier": {
							"description": "How many blocks to increase the cave radius by, from the center point of the cave.",
							"type": "number"
						}
					}
				},
				"minecraft:underwater_cave_carver_feature": {
					"description": "Carves a cave through the world in the current chunk, and in every chunk around the current chunk in an 8 radial pattern. This feature will specifically target creating caves only below sea level. This feature will also only work when placed specifically in the pass 'pregeneration_pass'.",
					"additionalProperties": false,
					"properties": {
						"description": {
							"additionalProperties": false,
							"properties": {
								"identifier": {
									"$ref": "../../project/prefixedFileIdentifierEnum.json"
								}
							}
						},
						"fill_with": {
							"description": "Reference to the block to fill the cave with.",
							"$ref": "../general.json#/definitions/block_reference"
						},
						"width_modifier": {
							"description": "How many blocks to increase the cave radius by, from the center point of the cave.",
							"type": "number"
						},
						"replace_air_with": {
							"description": "Reference to the block to replace air blocks with.",
							"$ref": "../general.json#/definitions/block_reference"
						}
					}
				},
				"minecraft:growing_plant_feature": {
					"description": "Places a growing plant in the world. A growing plant is a column that is anchored either to the ceiling or the floor, based on its growth direction. The growing plant has a body and a head, where the head is the tip of the plant, and the body consists of the remainder blocks. This feature can be used to define growing plants with variable body and head blocks, e.g. Cave Vines.",
					"additionalProperties": false,
					"properties": {
						"description": {
							"additionalProperties": false,
							"properties": {
								"identifier": {
									"$ref": "../../project/prefixedFileIdentifierEnum.json"
								}
							}
						},
						"height_distribution": {
							"description": "Collection of weighted heights that placement will select from.",
							"type": "array",
							"items": {
								"type": "array",
								"minItems": 2,
								"maxItems": 2,
								"items": [
									{
										"description": "Plant height.",
										"$ref": "../../molang/embeddedBeta.json"
									},
									{
										"type": "number",
										"description": "Weight used in random selection. Value is relative to other weights in the collection."
									}
								]
							}
						},
						"allow_water": {
							"type": "boolean"
						},
						"growth_direction": {
							"type": "string",
							"description": "Direction that the plant grows towards.",
							"enum": ["UP", "DOWN"]
						},
						"age": {
							"description": "Age of the head of the plant.",
							"$ref": "../../molang/embeddedBeta.json"
						},
						"body_blocks": {
							"type": "array",
							"description": "Collection of weighted block descriptor that placement will select from for the body of the plant.",
							"items": {
								"type": "array",
								"minItems": 2,
								"maxItems": 2,
								"items": [
									{
										"description": "Plant body block.",
										"$ref": "../general.json#/definitions/block_reference"
									},
									{
										"description": "Weight used in random selection. Value is relative to other weights in the collection.",
										"type": "number"
									}
								]
							}
						},
						"head_blocks": {
							"type": "array",
							"description": "Collection of weighted block descriptor that placement will select from for the head of the plant.",
							"items": {
								"type": "array",
								"minItems": 2,
								"maxItems": 2,
								"items": [
									{
										"description": "Plant head block.",
										"$ref": "../general.json#/definitions/block_reference"
									},
									{
										"description": "Weight used in random selection. Value is relative to other weights in the collection.",
										"type": "number"
									}
								]
							}
						}
					}
				},
				"minecraft:snap_to_surface_feature": {
					"description": "Snaps the y-value of a feature placement pos to the floor or the ceiling within the provided 'vertical_search_range'. The placement biome is preserved. If the snap position goes outside of the placement biome, placement will fail.",
					"additionalProperties": false,
					"properties": {
						"description": {
							"additionalProperties": false,
							"properties": {
								"identifier": {
									"$ref": "../../project/prefixedFileIdentifierEnum.json"
								}
							}
						},
						"feature_to_snap": {
							"description": "Named reference of feature to be snapped.",
							"$ref": "../dynamic/identifierEnum.json"
						},
						"vertical_search_range": {
							"description": "Range to search for a floor or ceiling for snaping the feature.",
							"type": "integer"
						},
						"surface": {
							"description": "Defines the surface that the y-value of the placement position will be snapped to.",
							"type": "string",
							"enum": ["ceiling", "floor"]
						}
					}
				},
				"minecraft:vegetation_patch_feature": {
					"properties": {
						"description": {
							"additionalProperties": false,
							"properties": {
								"identifier": {
									"$ref": "../../project/prefixedFileIdentifierEnum.json"
								}
							}
						},
						"replaceable_blocks": {
							"type": "array",
							"items": {
								"$ref": "../general.json#/definitions/block_reference"
							}
						},
						"ground_block": {
							"$ref": "../general.json#/definitions/block_reference"
						},
						"vegetation_feature": {
							"$ref": "../../general/reference/feature.json"
						},
						"surface": {
							"type": "string",
							"enum": ["floor", "ceiling"]
						},
						"depth": {
							"anyOf": [
								{
									"type": "number"
								},
								{
									"type": "object",
									"properties": {
										"range_min": {
											"type": "number"
										},
										"range_max": {
											"type": "number"
										}
									}
								}
							]
						},
						"extra_deep_block_chance": {
							"type": "number"
						},
						"vertical_range": {
							"type": "integer"
						},
						"vegetation_chance": {
							"type": "number"
						},
						"horizontal_radius": {
							"anyOf": [
								{
									"type": "number"
								},
								{
									"type": "object",
									"properties": {
										"range_min": {
											"type": "number"
										},
										"range_max": {
											"type": "number"
										}
									}
								}
							]
						},
						"extra_edge_column_chance": {
							"type": "number"
						},
						"waterlogged": {
							"type": "boolean"
						}
					}
				},
				"minecraft:multiplace_feature": {
					"description": "Places one or a few multiface blocks on floors/walls/ceilings. Despite the name, any block can be placed by this feature. During placement, existing world blocks are checked to see if this feature can be placed on them based on the list provided in the 'can_place_on' field. If no 'can_replace_on' field is specified, the 'place_block' block can be placed on any existing block. This feature will also try to spread the 'place_block' block around the location in world the feature is placed.",
					"properties": {
						"description": {
							"additionalProperties": false,
							"properties": {
								"identifier": {
									"$ref": "../../project/prefixedFileIdentifierEnum.json"
								}
							}
						},
						"places_block": {
							"description": "Reference to the block to be placed.",
							"$ref": "../general.json#/definitions/block_reference"
						},
						"search_range": {
							"description": "How far, in blocks, this feature can search for a valid position to place.",
							"type": "integer"
						},
						"can_place_on_floor": {
							"description": "Can this feature be placed on the ground (top face of a block)?",
							"type": "boolean"
						},
						"can_place_on_ceiling": {
							"description": "Can this feature be placed on the ceiling (bottom face of a block)?",
							"type": "boolean"
						},
						"can_place_on_wall": {
							"description": "Can this feature be placed on the wall (side faces of a block)?",
							"type": "boolean"
						},
						"chance_of_spreading": {
							"description": "For each block placed by this feature, how likely will that block spread to another?",
							"type": "number"
						},
						"can_place_on": {
							"description": "A list of blocks that the block in this feature can be placed on. Omit this field to allow any block to be placed on.",
							"type": "array",
							"items": {
								"$ref": "../general.json#/definitions/block_reference"
							}
						}
					}
				},
				"minecraft:ore_feature": {
					"properties": {
						"may_replace": {
							"doNotSuggest": true,
							"deprecationMessage": "Deprecated in favor of 'replace_rules' (format_version: v1.16.220)."
						},
						"replace_rules": {
							"description": "Collection of replace rules that will be checked in order of definition. If a rule is resolved, the rest will not be resolved for that block position.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"places_block": {
										"description": "Reference to the block to be placed.",
										"$ref": "../general.json#/definitions/block_reference"
									},
									"may_replace": {
										"description": "A list of blocks that may be replaced during placement. Omit this field to allow any block to be replaced.",
										"type": "array",
										"items": {
											"$ref": "../general.json#/definitions/block_reference"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	]
}
