{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"properties": {
		"all_of": {
			"type": "array",
			"items": {
				"$ref": "#"
			}
		},
		"any_of": {
			"type": "array",
			"items": {
				"$ref": "#"
			}
		},
		"none_of": {
			"type": "array",
			"items": {
				"$ref": "#"
			}
		},
		"subject": {
			"$ref": "../../general/filter/subject.json"
		},
		"operators": {
			"$ref": "../../general/filter/operator.json"
		}
	},
	"allOf": [
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_equipment"
					}
				}
			},
			"then": {
				"properties": {
					"domain": {
						"type": "string",
						"enum": [
							"any",
							"armor",
							"feet",
							"hand",
							"head",
							"leg",
							"torso"
						]
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_game_rule"
					}
				}
			},
			"then": {
				"properties": {
					"domain": {
						"type": "string",
						"enum": [
							"alwaysday",
							"commandblockoutput",
							"commandblocksenabled",
							"dodaylightcycle",
							"doentitydrops",
							"dofiretick",
							"doimmediaterespawn",
							"domobloot",
							"domobspawning",
							"dotiledrops",
							"doweathercycle",
							"drowningdamage",
							"falldamage",
							"firedamage",
							"functioncommandlimit",
							"keepinventory",
							"maxcommandchainlength",
							"mobgriefing",
							"naturalregeneration",
							"pvp",
							"randomtickspeed",
							"sendcommandfeedback",
							"showcoordinates",
							"showdeathmessages",
							"tntexplodes"
						]
					}
				}
			}
		},
		{
			"properties": {
				"test": {
					"type": "string",
					"description": "The name of the test to apply",
					"examples": [
						"clock_time",
						"distance_to_nearest_player",
						"has_ability",
						"has_biome_tag",
						"has_component",
						"has_container_open",
						"has_damage",
						"has_equipment",
						"has_mob_effect",
						"has_ranged_weapon",
						"has_tag",
						"has_target",
						"has_trade_supply",
						"hourly_clock_time",
						"inactivity_timer",
						"is_altitude",
						"is_avoiding_mobs",
						"is_biome",
						"is_block",
						"is_brightness",
						"is_caravan",
						"is_climbing",
						"is_clouds",
						"is_color",
						"is_daytime",
						"is_difficulty",
						"is_family",
						"is_game_rule",
						"is_humid",
						"is_immobile",
						"is_in_village",
						"is_lava",
						"is_leashed",
						"is_leashed_to",
						"is_mark_variant",
						"is_moving",
						"in_nether",
						"is_owner",
						"is_persistent",
						"is_riding",
						"is_skin_id",
						"is_sleeping",
						"is_sneaking",
						"is_snow_covered",
						"is_target",
						"is_temperature_type",
						"is_temperature_value",
						"is_underground",
						"is_underwater",
						"is_variant",
						"is_visible",
						"is_water",
						"is_water_or_rain",
						"light_level",
						"moon_intensity",
						"moon_phase",
						"on_ground",
						"on_ladder",
						"random_chance",
						"rider_count",
						"surface_mob",
						"trusts",
						"weather",
						"weather_at_position",
						"in_contact_with_water",
						"in_block"
					]
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "clock_time"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "number"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "distance_to_nearest_player"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "integer"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_ability"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/ability.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_biome_tag"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/reference/biomeTag.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_component"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "./componentsList.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_container_open"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_damage"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/vanilla/damageType.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_equipment"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"anyOf": [
							{
								"$ref": "../../general/reference/identifiers.json#/definitions/item_identifiers"
							},
							{
								"$ref": "../../general/reference/identifiers.json#/definitions/block_identifiers"
							}
						]
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_mob_effect"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/vanilla/effectName.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_ranged_weapon"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_tag"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../function/dynamic/entityTagEnum.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_target"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "has_trade_supply"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "hourly_clock_time"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/hourlyClockTime.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "inactivity_timer"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "number"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_altitude"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "number"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_avoiding_mobs"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_biome"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/vanilla/biomeName.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_block"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/reference/identifiers.json#/definitions/block_identifiers"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_brightness"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "number"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_caravan"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_climbing"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_clouds"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_color"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/colorPalette.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_daytime"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_difficulty"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "../../general/gameDifficulty.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_family"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "./family.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_game_rule"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_humid"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_immobile"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"$ref": "./family.json"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_in_village"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_lava"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_leashed"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_leashed_to"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_mark_variant"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "integer"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_moving"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "in_nether"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_owner"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_persistent"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_riding"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_skin_id"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "integer"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_sleeping"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_sneaking"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_snow_covered"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_target"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_temperature_type"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "string",
						"enum": ["cold", "ocean", "mild", "warm"]
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_temperature_value"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "number"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_underground"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_underwater"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_variant"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "integer"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_visible"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_water"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "is_water_or_rain"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "light_level"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "integer",
						"maximum": 15,
						"minimum": 0
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "moon_intensity"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "number"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "moon_phase"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "integer",
						"minimum": 0,
						"maximum": 7
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "on_ground"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "on_ladder"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "random_chance"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "number"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "rider_count"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "integer"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "surface_mob"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "trusts"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "weather"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "string",
						"enum": [
							"clear",
							"rain",
							"thunderstorm",
							"precipitation"
						]
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "weather_at_position"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "string",
						"enum": [
							"clear",
							"rain",
							"thunderstorm",
							"precipitation"
						]
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "in_contact_with_water"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "boolean"
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"test": {
						"const": "in_block"
					}
				}
			},
			"then": {
				"properties": {
					"value": {
						"type": "string",
						"$ref": "../../general/reference/identifiers.json#/definitions/block_identifiers"
					}
				}
			}
		}
	]
}
